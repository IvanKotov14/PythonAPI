from testststststs.test_autorization import TestUserRegister

from Lib.assertions import Asseretions

from Lib.base_case import BaseCase
from Lib.my_requests import MyRequests
import allure
import pytest
from datetime import datetime

@allure.epic("Кейс ввода данных страхователя")
class TestRegisterInsurant(BaseCase):
    random_part = datetime.now().strftime("%m%d%Y%H%M%S")

    @allure.description("Регистрация страхователя с авторизованного пользователя и правильными данными")
    def test_log_insurant(self):
        url = "v1/insured_objects/insurants/natural_persons"
        valid_insurant = {
            "last_name": "Угрев",
            "first_name": "Игорь",
            "patronymic": "Игоревич",
            "birth_date": "1990-01-01",
            "contact": [
                {"contact_type": "PHONE", "data": "+7 (911) 169-99-99"},
                {"contact_type": "EMAIL", "data": "igor@gmail.com"}
            ],
            "credential": [
                {"credential_type": "RUSSIAN_INTERNAL_PASSPORT",
                 "issue_date": "2017-03-08",
                 "issue_point": "УФМС",
                 "issue_point_code": "123-456",
                 "number": "123456",
                 "series": "1234"}
            ],
            "address": [
                {"address_query": "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
                 "address_type": "LEGAL_ADDRESS",
                 "region_kladr_id": "7800000000000",
                 "city_kladr_id": "7800000600000"},
                {"address_query": "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
                 "address_type": "ACTUAL_ADDRESS",
                 "region_kladr_id": "7800000000000",
                 "city_kladr_id": "7800000600000"}
            ]
        }
        token = TestUserRegister().test_get_user_auth()
        headers = {
            "Content-Type": "application/json; charset=utf-8",
            "Authorization": f"Token {token}"
        }
        response = MyRequests.post(url, headers=headers, json=valid_insurant)
        Asseretions.assert_code_status(response, 201)
        result = self.get_json_value(response, "person")
        return result

    @allure.description("Регистрация авторизованного страхователя без указания адреса или данных воовсе")
    def test_log_negative_insurant(self):
        url = "v1/insured_objects/insurants/natural_persons"
        valid_insurant = {
            "last_name": "Угрев",
            "first_name": "Игорь",
            "patronymic": "Игоревич",
            "birth_date": "1990-01-01",
            "contact": [
                {"contact_type": "PHONE", "data": "+7 (911) 169-99-99"},
                {"contact_type": "EMAIL", "data": "igor@gmail.com"}
            ],
            "credential": [
                {"credential_type": "RUSSIAN_INTERNAL_PASSPORT",
                 "issue_date": "2017-03-08",
                 "issue_point": "УФМС",
                 "issue_point_code": "123-456",
                 "number": "123456",
                 "series": "1234"}
            ],
            "address": [
                {"address_query": "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
                 "address_type": "LEGAL_ADDRESS",
                 "region_kladr_id": "7800000000000",
                 "city_kladr_id": "7800000600000"},
                {"address_query": "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
                 "address_type": "ACTUAL_ADDRESS",
                 "region_kladr_id": "7800000000000",
                 "city_kladr_id": "7800000600000"}
            ]
        }
        token = TestUserRegister().test_get_user_auth()
        headers = {
            "Content-Type": "application/json; charset=utf-8",
            "Authorization": f"Token {token}"
        }

        del valid_insurant["address"]

        response = MyRequests.post(url, headers=headers, json=valid_insurant)
        Asseretions.assert_code_status(response, 400)

        response = MyRequests.post(url, headers=headers, json={})
        Asseretions.assert_code_status(response, 400)

    @allure.description("Регистрация страхователя без авторизациии")
    def test_log_insured_no_token(self):
        url = "v1/insured_objects/insurants/natural_persons"
        valid_insured = {
            "last_name": "Угрев",
            "first_name": "Игорь",
            "patronymic": "Игоревич",
            "birth_date": "1990-01-01",
            "contact": [
                {"contact_type": "PHONE", "data": "+7 (911) 169-99-99"},
                {"contact_type": "EMAIL", "data": "igor@gmail.com"}
            ],
            "credential": [
                {"credential_type": "RUSSIAN_INTERNAL_PASSPORT",
                 "issue_date": "2017-03-08",
                 "issue_point": "УФМС",
                 "issue_point_code": "123-456",
                 "number": "123456",
                 "series": "1234"}
            ],
            "address": [
                {"address_query": "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
                 "address_type": "LEGAL_ADDRESS",
                 "region_kladr_id": "7800000000000",
                 "city_kladr_id": "7800000600000"},
                {"address_query": "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
                 "address_type": "ACTUAL_ADDRESS",
                 "region_kladr_id": "7800000000000",
                 "city_kladr_id": "7800000600000"}
            ]
        }
        headers = {
            "Content-Type": "application/json; charset=utf-8",
            "Authorization": ""
        }
        response = MyRequests.post(url, headers=headers, json=valid_insured)
        Asseretions.assert_code_status(response, 401)

    @allure.description("Регистрация авторизованного страхователя с произвольными данными и ожидаемым ответом")
    @pytest.mark.parametrize(
        "last_name,first_name,patronymic,birth_date,phone,email,credential_type,issue_date,issue_point,"
        "issue_point_code,number,series,legal_address,actual_address,legal_address_region_id,actual_adress_region_id,"
        "legal_address_city_id,actual_address_city_id,expected_status_code",
        [
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 201),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "0700000440000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "0700000440000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "81203805001", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "81203805001", 400),
            ("", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "DDDDD",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2099-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-35", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург ", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             f"г {random_part}",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             f"г {random_part}", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             random_part,
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             random_part, "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", random_part, "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", random_part,
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             random_part, "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", random_part, 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "", 400),
            (random_part, "Игорь", "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", random_part, "Игоревич", "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", random_part, "1990-01-01", "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", random_part, "+7 (911) 169-99-99", "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400),
            ("Голубев", "Игорь", "Игоревич", "1990-01-01", random_part, "igor@gmail.com",
             "RUSSIAN_INTERNAL_PASSPORT",
             "2017-03-08", "УФМС", "123-456", "123456", "1234",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1",
             "г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1", "7800000000000", "7800000000000",
             "7800000600000", "7800000600000", 400)
        ])
    def test_invalid_insurant(self, last_name, first_name, patronymic, birth_date, phone, email, credential_type,
                              issue_date, issue_point,
                              issue_point_code, number, series, legal_address, actual_address, legal_address_region_id,
                              actual_adress_region_id,
                              legal_address_city_id, actual_address_city_id, expected_status_code):
        url = "v1/insured_objects/owners/natural_persons"
        valid_insurant = {
            "last_name": last_name,
            "first_name": first_name,
            "patronymic": patronymic,
            "birth_date": birth_date,
            "contact": [
                {"contact_type": "PHONE", "data": phone},
                {"contact_type": "EMAIL", "data": email}
            ],
            "credential": [
                {"credential_type": credential_type,
                 "issue_date": issue_date,
                 "issue_point": issue_point,
                 "issue_point_code": issue_point_code,
                 "number": number,
                 "series": series}
            ],
            "address": [
                {"address_query": legal_address,
                 "address_type": "LEGAL_ADDRESS",
                 "region_kladr_id": legal_address_region_id,
                 "city_kladr_id": legal_address_city_id},
                {"address_query": actual_address,
                 "address_type": "ACTUAL_ADDRESS",
                 "region_kladr_id": actual_adress_region_id,
                 "city_kladr_id": actual_address_city_id}
            ]
        }
        token = TestUserRegister().test_get_user_auth()
        headers = {
            "Content-Type": "application/json; charset=utf-8",
            "Authorization": f"Token {token}"
        }
        response = MyRequests.post(url, headers=headers, json=valid_insurant)
        Asseretions.assert_code_status(response, expected_status_code)